automation:
  - alias: Arm alarm when erribody is away (and HASS starts)
    trigger:
      - platform: event
        event_type: homeassistant_start
    condition:
      - condition: state
        entity_id: group.main_devices
        state: not_home
    action:
      - service: script.alarm_arm_away

  - alias: Arm alarm when erribody is away
    trigger:
      - platform: state
        entity_id: group.main_devices
        state: not_home
    action:
      - service: script.alarm_arm_away

  - alias: Hue Motion Detector triggered
    trigger:
      - platform: state
        entity_id: sensor.toilet_presence
        state: "True"
      - platform: state
        entity_id: sensor.hallway_presence
        state: "True"
      - platform: state
        entity_id: sensor.kitchen_presence
        state: "True"
      - platform: state
        entity_id: sensor.bathroom_presence
        state: "True"
    condition:
      - condition: state
        entity_id: alarm_control_panel.ha_alarm
        state: armed_away
    action:
      - service: alarm_control_panel.alarm_trigger
        entity_id: alarm_control_panel.ha_alarm
      - service: notify.get_to_me
        data_template:
          message: >
            {{ trigger.to_state.attributes.friendly_name }}
            Motion has been detected

  - alias: Trigger an alert when zoneminder picks up a new event
    trigger:
      - platform: state
        entity_id: sensor.c1_events
      - platform: state
        entity_id: sensor.c2_events
      - platform: state
        entity_id: sensor.octopi_events
      - platform: state
        entity_id: sensor.z3c_events
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: alarm_control_panel.ha_alarm
          state: armed_away
        - condition: template
          value_template: >
            {% if trigger.from_state.state == 'unknown' %}
              false
            {% else %}
              {{ trigger.from_state.state | int < trigger.to_state.state | int }}
            {% endif %}
    action:
      - service: alarm_control_panel.alarm_trigger
        entity_id: alarm_control_panel.ha_alarm
      - service: notify.get_to_me
        data_template:
          message: >
            ALERT: Camera {{ trigger.to_state.attributes.friendly_name | replace("Events", "", 1) }} has detected motion

  - alias: Notify when a new platform has been discovered
    trigger:
      - platform: event
        event_type: platform
    action:
      service: notify.smsr
      data_template:
        message: "Home Assistant has discovered a new device (platform): {{ service }}.{{ discovered }}"
        target: me

  - alias: Notify when new network device has been discovered
    trigger:
      - platform: event
        event_type: device_tracker_new_device
    action:
      service: notify.smsr
      data_template:
        message: "A new device has been detected: {{ trigger.event }}"
        target: me

  - alias: Away armed
    trigger:
      - platform: state
        entity_id: alarm_control_panel.ha_alarm
        state: armed_away
    action:
      - service: script.alarm_armed_away

  - alias: Alarm disarmed
    trigger:
      - platform: state
        entity_id: alarm_control_panel.ha_alarm
        state: disarmed
    action:
      - service: script.alarm_disarmed

  - alias: Alarm has been triggered
    trigger:
      - platform: state
        entity_id: alarm_control_panel.ha_alarm
        state: triggered
    # condition:
    #     - condition: state
    #       entity_id: alarm_control_panel.ha_alarm
    #       state: not_disarmed
    action:
      - service: script.alarm_triggered

  - alias: Someone is home and the alarm is on
    trigger:
      - platform: state
        entity_id: device_tracker.her_phone
        from: not_home
        to: home
      - platform: state
        entity_id: device_tracker.n5x
        from: not_home
        to: home
    condition:
      - condition: state
        entity_id: alarm_control_panel.ha_alarm
        state: armed_away
    action:
      - service: notify.pushover
        data:
          message: Someone is home and the alarm is on.


script:
  alarm_arm_away:
    alias: 'Activate away alarm'
    sequence:
      - service: notify.smsr
        data:
          message: "Home Assistant: Everybody left. Arming away."
          target: me
      - service: alarm_control_panel.alarm_arm_away
        data:
          code: !secret alarm_code
      - service: lock.lock
        data:
          entity_id: lock.home

  alarm_armed_away:
    alias: 'Away alarm activated'
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: group.modect
      - service: notify.smsr
        data:
          message: "Home Assistant: Alarm armed (away)"
          target: me

  alarm_disarmed:
    alias: 'Alarm disarmed'
    sequence:
      - service: homeassistant.turn_off
        data:
          entity_id: group.modect
      - service: notify.smsr
        data:
          message: "Home Assistant: Alarm disarmed"
          target: me

  alarm_triggered:
    alias: 'Alarm triggered'
    sequence:
      # - service: notify.get_to_me
      #   data:
      #     message: "Home Assistant: SECURITY BREACH DETECTED"
      #     target: me
      # - service: notify.smsr
      #   data:
      #     message: "Home Assistant: SECURITY BREACH DETECTED"
      #     target: her
      - event: LOGBOOK_ENTRY
        event_data:
          name: Alarm
          message: has been triggered
          domain: alarm

# vim: set filetype=yaml et sw=2 ts=2 :
