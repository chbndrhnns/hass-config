  smoke_break:
    alias: "Smoke break"
    sequence:
      # Cancel ev. old timers
      - service: script.turn_off
        data:
          entity_id: script.smoke_break_timer_off
      - service: light.turn_on
        data:
          entity_id: light.terrace
      # Set new timer
      - service: script.turn_on
        data:
          entity_id: script.smoke_break_timer_off

  smoke_break_timer_off:
    alias: "Smoke break: Turn off lamp after 5 minutes"
    sequence:
      - delay:
          minutes: 5
      - service: light.turn_off
        data:
          entity_id: light.terrace

  mimine:
    alias: "Tell my wife I love her"
    sequence:
      - service: notify.smsr
        data:
          message: "Je t'aime :)"
          target: her

  ha_restart:
    alias: 'Restart HASS'
    sequence:
      - service: shell_command.ha_restart

  ha_reload_config:
    alias: 'Reload core config'
    sequence:
      - service: homeassistant.reload_core_config

  notify_test:
    alias: 'Test notification'
    sequence:
      - service: notify.speakcast
        data:
          message: Hello from hass

  im_home:
    alias: 'I am home'
    sequence:
      - delay:
          minutes: 1
      - service: notify.smsr
        data:
          message: "Je suis rentré, Mimine. Je t'aime :)"
          target: me
      - service: notify.speakcast
        data:
          message: "Attention! Le roi arrive!"

  she_is_home:
    alias: 'She is home'
    sequence:
      - delay:
          minutes: 1
      - service: notify.pushover
        data:
          message: 'Mimine just came home'
      - service: notify.speakcast
        data:
          message: 'Salut Mimine. Bienvenue à la maison'

  alarm_arm_away:
    alias: 'Activate away alarm'
    sequence:
      - service: notify.smsr
        data:
          message: "Home Assistant: Everybody left. Arming away."
          target: me
      - service: alarm_control_panel.alarm_arm_away
        data:
          code: !secret alarm_code

  alarm_armed_away:
    alias: 'Away alarm activated'
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: group.modect_cameras
      - service: notify.smsr
        data:
          message: "Home Assistant: Alarm armed (away)"
          target: me

  alarm_disarmed:
    alias: 'Alarm disarmed'
    sequence:
      - service: homeassistant.turn_off
        data:
          entity_id: group.modect_cameras
      - service: notify.smsr
        data:
          message: "Home Assistant: Alarm disarmed"
          target: me

  alarm_triggered:
    alias: 'Alarm triggered'
    sequence:
      - service: notify.smsr
        data:
          message: "Home Assistant: SECURITY BREACH DETECTED"
          target: me
      # - service: notify.smsr
      #   data:
      #     message: "Home Assistant: SECURITY BREACH DETECTED"
      #     target: her

  dash_button_kleenex_pressed:
    alias: 'Kleenex Dash button pressed'
    sequence:
      - service: notify.speakcast
        data:
          message: "Je t'aime Mimine."

  dash_button_durex_pressed:
    alias: 'Durex Dash button pressed'
    sequence:
      - service: script.smoke_break
        data:
          entity_id: light.terrace
      - service: notify.pushover
        data:
          message: "Durex dash button pressed"

# vim: set filetype=yaml et sw=2 ts=2 :
