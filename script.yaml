  # Misc section
  smoke_break:
    alias: "Smoke break"
    sequence:
      # Cancel ev. old timers
      - service: script.turn_off
        data:
          entity_id: script.smoke_break_timer_off
      - service_template: >
          light.{% if is_state('light.terrace', 'on') %}turn_off{% else %}turn_on{% endif %}
        data:
          entity_id: light.terrace
      # Set new timer
      - service: script.turn_on
        data:
          entity_id: script.smoke_break_timer_off

  smoke_break_timer_off:
    alias: "Smoke break: Turn off lamp after 5 minutes"
    sequence:
      - delay:
          minutes: 5
      - service: light.turn_off
        data:
          entity_id: light.terrace
  # End of Misc section

  tell_my_wife_i_love_her:
    alias: "Tell my wife I love her"
    sequence:
      - service: notify.smsr
        data:
          message: "Je t'aime :)"
          target: her

  # Hass section
  ha_restart:
    alias: 'Restart HASS'
    sequence:
      - service: shell_command.ha_restart

  ha_reload_config:
    alias: 'Reload core config'
    sequence:
      - service: homeassistant.reload_core_config
  # End of Hass section

  # Homecoming section
  im_home:
    alias: 'I am home'
    sequence:
      # - service: notify.smsr
      #   data:
      #     message: "Je suis rentré, Mimine. Je t'aime :)"
      #     target: her
      - service: notify.speakcast
        data:
          message: "Attention! Le roi arrive!"

  she_is_home:
    alias: 'She is home'
    sequence:
      - service: notify.pushover
        data:
          message: 'Mimine just came home'
      - service: notify.speakcast
        data:
          message: 'Salut Mimine. Bienvenue à la maison'
  # End of Homecoming section

  # Alarm section
  alarm_arm_away:
    alias: 'Activate away alarm'
    sequence:
      - service: notify.smsr
        data:
          message: "Home Assistant: Everybody left. Arming away."
          target: me
      - service: alarm_control_panel.alarm_arm_away
        data:
          code: !secret alarm_code

  alarm_armed_away:
    alias: 'Away alarm activated'
    sequence:
      - service: homeassistant.turn_on
        data:
          entity_id: group.modect
      - service: notify.smsr
        data:
          message: "Home Assistant: Alarm armed (away)"
          target: me

  alarm_disarmed:
    alias: 'Alarm disarmed'
    sequence:
      - service: homeassistant.turn_off
        data:
          entity_id: group.modect
      - service: notify.smsr
        data:
          message: "Home Assistant: Alarm disarmed"
          target: me

  alarm_triggered:
    alias: 'Alarm triggered'
    sequence:
      - service: notify.get_to_me
        data:
          message: "Home Assistant: SECURITY BREACH DETECTED"
          target: me
      # - service: notify.smsr
      #   data:
      #     message: "Home Assistant: SECURITY BREACH DETECTED"
      #     target: her

  # End of Alarm section

  # Shell command section

  z3c_restart:
    alias: Reboot Z3C
    sequence:
      - event: LOGBOOK_ENTRY
        event_data:
          name: Sony Z3C
          message: rebooted
          domain: camera
      - service: shell_command.z3c_restart

  # End of Shell command section

  # Amazon dash button section

  dash_button_kleenex_pressed:
    alias: 'Kleenex Dash button pressed'
    sequence:
      - event: LOGBOOK_ENTRY
        event_data:
          name: Kleenex Dash button
          message: pressed
      - service: notify.dash_pressed
        data:
          message: kleenex
      - service: notify.speakcast
        data:
          message: !secret kleenex_message

  dash_button_durex_pressed:
    alias: 'Durex Dash button pressed'
    sequence:
      - event: LOGBOOK_ENTRY
        event_data:
          name: Durex Dash button
          message: pressed
      - service: notify.dash_pressed
        data:
          message: durex
      - service: script.smoke_break
        data:
          entity_id: light.terrace

  # End of Amazon dash button section

  # Harmony section

  watch_tv:
    alias: Watch TV
    sequence:
      - service: remote.turn_on
        data:
          entity_id: remote.harmony_hub
          activity: Watch TV

  shield_tv:
    alias: Shield TV
    sequence:
      - service: remote.turn_on
        data:
          entity_id: remote.harmony_hub
          activity: Shield

  # End of Harmony section

# vim: set filetype=yaml et sw=2 ts=2 :
