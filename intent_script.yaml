HomeTemperature:
  speech:
    text: >
      {% for entity_id in states.group.weather_indoor.attributes.entity_id %}
        {%- for state in states.sensor if state.entity_id == entity_id -%}
          {{ state.attributes.friendly_name }}
        {%- endfor %} is {{ states(entity_id) }} C
      {%- endfor -%}
      Average is: {{ states('sensor.home_temperature') }}C

TurnLights:
  speech:
    text: Turning {{ Room }} lights {{ OnOff }}
  async_action: True
  action:
    - service_template: >
        {%- if OnOff == "on" -%}
          light.turn_on
        {%- elif OnOff == "toggle" -%}
          light.toggle
        {%- else -%}
          light.turn_off
        {%- endif -%}
      data_template:
        entity_id: >
          {%- if Room == "all" -%}
            group.all_lights
          {%- else -%}
            light.{{ Room | replace(' ', '_') }}
          {%- endif -%}

Scene:
  speech:
    text: Setting up scene {{ Scene }}
  async_action: True
  action:
    - service_template: >
        {%- if Scene == "smoke break" -%}
          script.smoke_break
        {%- else -%}
          scene.turn_on
        {%- endif -%}
      data_template:
        entity_id: "scene.{{ Scene | replace(' ', '_') }}"

DoorLock:
  speech:
    text: Setting door lock state to {{ DoorLockState }}
  async_action: True
  action:
    - service_template: >
        {%- if DoorLockState == "unlock" -%}
          script.unlock_door
        {%- else -%}
          script.lock_door
        {%- endif -%}

Alarm:
  speech:
    text: Setting alarm to {{ AlarmState }}
  async_action: True
  action:
    - service_template: >
        {%- if AlarmState == "disarm" -%}
          script.alarm_disarm
        {%- else -%}
          script.alarm_arm_away
        {%- endif -%}

LetMeIn:
  speech:
    text: Letting you in.
  async_action: True
  action:
    - service: script.buzz_door_open
    - service: script.buzz_door_open
    - service: script.buzz_door_open
    - service: script.buzz_door_open
    - service: script.alarm_disarm
    - service: script.unlock_door

CameraSnapshot:
  speech:
    text: "Hang on..."
  async_action: true
  action:
    - service: script.snap_send
      data_template:
        cam: "{{ CameraName }}"

# CameraSnap:
#   speech:
#     text: "Grabbing snapshot from {{ Camera }}"
#   async_action: False
#   action:
#     - service: notify.facebook
#       message: Camera image
#       data:
#         attachment:
#           type: image
#           payload:
#             url: {%- for state in states.camera if state.entity_id == Camera -%}https://home.comreset.io:8443{{ state.attributes.entity_picture }}{%- endfor -%}

TV_Volume:
  speech:
    text: "Setting volume {{ VolumeLevel }}"
  async_action: True
  action:
    - service_template: >
        {%- if VolumeLevel == "mute" -%}
          script.tv_volume_mute
        {%- elif VolumeLevel == "down" -%}
          script.tv_volume_down
        {%- elif VolumeLevel == "up" -%}
          script.tv_volume_up
        {%- endif -%}

ChangeTVChannel:
  speech:
    text: "Bouge pas. Je te fais Ã§a."
  async_action: True
  action:
    - service: media_player.select_source
      data_template:
        entity_id: media_player.livebox_play
        source: "{{ TVChannel }}"

# vim: set filetype=yaml et sw=2 ts=2 :
